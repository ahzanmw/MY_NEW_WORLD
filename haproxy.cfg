global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http


#frontend Jabber_IN
##	bind 45.55.179.9:5432 name port5432
#	 bind 0.0.0.0:5432 name port5432
#	mode tcp
 #   	option tcplog
#	option tcpka
#	
#	acl d1 dst_port 5432
 #   	use_backend pg_db if d1

listen http-cls
        bind *:8005


# server app1 clusterconfiguration.clusterconfiguration.dev.docker:8805  maxconn 32
       server cls1 clusterconfiguration.clusterconfiguration.dev.docker:8805
# server app3 192.168.3.200:8000  maxconn 32
       # server app2 192.168.3.200:8082  maxconn 32
      #  server cls2 google.lk:80 
	#server app5 eventmonitor.eventmonitor.dev.docker:8806 maxconn 32

listen http-dyn
	bind *:8850
	server app1 dynamicconfigurationgenerator.dynamicconfigurationgenerator.dev.docker:8816  
	server app2 dynamicconfigurationgenerator1.dynamicconfigurationgenerator.dev.docker:8816
	server app3 dynamicconfigurationgenerator2.dynamicconfigurationgenerator.dev.docker:8816
#	server app4 slt.lk:80


listen http-fileservice
	bind *:8860
	server flser1 fileservice.fileservice.dev.docker:8812

listen http-ruleservice
	bind *:8870
	server ruleser1 ruleservice.ruleservice.dev.docker:8817
	server ruleser2 ruleservice1.ruleservice.dev.docker:8817
	server ruleser3 ruleservice2.ruleservice.dev.docker:8817


listen http-cdrprocessor
	bind *:8851
	server cdrpro1 cdrprocessor.cdrprocessor.dev.docker:8809
	server cdrpro2 cdrprocessor1.cdrprocessor.dev.docker:8809

listen http-httppromonitor
	bind *:8852
	server httppromonitor1 httpprogrammingmonitorapi.httpprogrammingmonitorapi.dev.docker:8813
	server httppromonitor2 httpprogrammingmonitorapi1.httpprogrammingmonitorapi.dev.docker:8813

listen http-swager
	bind *:8865

	acl IS_AppReg path_sub APPRegistry
	acl IS_LmtHndl path_sub LimitHandler
	acl IS_ClsConfig path_sub CloudConfiguration
	acl IS_DynConfGen path_sub DynamicConfigGenerator
#	acl IS_SipUserEnd path_sub SipUserEndpointService ContextManagement UACManagement ExtensionManagement SIPUserGroupManagemnt
	acl IS_SipUserEnd path_sub SipUserEndpointService 
	acl IS_PhnNumTrnk path_sub PhoneNumberTrunkApi
	acl IS_RuleService path_sub CallRule
# PhoneNumberTrunkService

	use_backend swager_appreg if IS_AppReg
	use_backend swager_lmthndl if IS_LmtHndl
	use_backend swager_clsconfig if IS_ClsConfig
	use_backend swager_dynconfgen if IS_DynConfGen
	use_backend swager_sipuserend if IS_SipUserEnd
	use_backend swager_phnnumtrnk if IS_PhnNumTrnk
	use_backend swager_callrule if IS_RuleService


#	server swager1 swagerapi.swagerapi.dev.docker
	default_backend swager_def


backend swager_def
	mode http
#	server swager2 swagerapi.httpd.dev.docker:80
	server swager2 swagerapi.swagerapi.dev.docker:80

backend swager_appreg
    	mode http
	server geoserver_1 appregistry.appregistry.dev.docker:8811

backend swager_lmthndl
        mode http
#	server cls2 google.lk:80
	server limitserver_1 limithandler.limithandler.dev.docker:8815

backend swager_clsconfig
	mode http
	server clsconfserver_1 clusterconfiguration.clusterconfiguration.dev.docker:8805

backend swager_dynconfgen
	mode http
    server  dyncongenserver_1 dynamicconfigurationgenerator.dynamicconfigurationgenerator.dev.docker:8816
	server  dyncongenserver_2 dynamicconfigurationgenerator1.dynamicconfigurationgenerator.dev.docker:8816
	server  dyncongenserver_3 dynamicconfigurationgenerator2.dynamicconfigurationgenerator.dev.docker:8816

backend swager_sipuserend
	mode http
	server sipuserendserver_1 sipuserendpointservice.sipuserendpointservice.dev.docker:8814

backend swager_phnnumtrnk
	mode http
	server phnnumtrnkserver_1 phonenumbertrunkservice.phonenumbertrunkservice.dev.docker:8818

backend swager_callrule
	mode http 
	server ruleserver_1 ruleservice.ruleservice.dev.docker:8817
    server ruleserver_2 ruleservice1.ruleservice.dev.docker:8817
    server ruleserver_3 ruleservice2.ruleservice.dev.docker:8817


backend pg_db
#	tcp-check connect
#    	tcp-check send PING\r\n
#    	tcp-check expect string +PONG
	server Server1ZoneE pgdatabase.postgres.dev.docker:5432



listen http-appreg
	bind *:8866
	server appreg1 appregistry.appregistry.dev.docker:8811

listen http-help
	bind *:8859
#	server uri /usr/local/src/staticfile/
	redirect location /usr/local/src/staticfile/
